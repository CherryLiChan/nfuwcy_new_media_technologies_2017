1
00:00:00,120 --> 00:00:07,950
 [乐曲向下计数：7,6，5,4，3，2，1] 

2
00:00:07,950 --> 00:00:09,880
嗨，我的名字叫林恩。 

3
00:00:09,880 --> 00:00:16,640
我是Spotify里的一个的软件工程师，我会是第一个承认网络的可靠性是理所当然的人。 

4
00:00:17,100 --> 00:00:20,940
网络上暴涨的庞大的信息量是惊人的。 

5
00:00:20,940 --> 00:00:25,320
但是，如何将每一份数据可靠地交付给你呢？ 

6
00:00:26,140 --> 00:00:28,760
比如说你想从Spotify里播放一首歌。 

7
00:00:28,760 --> 00:00:33,800
看起来像是您的计算机直接连接到Spotify的服务器，Spotify用专线

8
00:00:33,800 --> 00:00:38,400
把一首歌送给你。但实际上，
互联网并不是这样工作的。 

9
00:00:38,400 --> 00:00:43,600
如果互联网是由直接的、专用的连线组成的，
那它就不可能在数百万用户连线时

10
00:00:43,600 --> 00:00:49,580
保持工作状态。尤其是因为不能保证所有的
电线和电脑都在时时刻刻正常运作。 

11
00:00:50,140 --> 00:00:54,560
事实上，互联网上数据是以
更不直接的方式传播的。 

12
00:00:54,560 --> 00:01:03,940
很多年前，在70年代初，我和我的搭档Bob Kahn
开始设计我们现在称之为互联网的东西。 

13
00:01:04,459 --> 00:01:12,740
鲍勃和我有责任和机会去制定
互联网的协议及其体系架构。 

14
00:01:12,740 --> 00:01:14,780
因此，我们坚持

15
00:01:14,780 --> 00:01:21,140
到现在，参与互联网
的发展和演变。 

16
00:01:21,140 --> 00:01:26,480
信息是用非常有趣的方法从一台
计算机转移到另一台计算机。 

17
00:01:26,480 --> 00:01:30,900
它不必遵循固定的路径。其实，你的
路径可能会在计算机到计算机

18
00:01:30,900 --> 00:01:36,100
中的对话发生改变。互联网上的信息

19
00:01:36,100 --> 00:01:42,050
以数据包（packets）的形式从一台电脑
传到另一台电脑，而数据包在互联网上

20
00:01:42,050 --> 00:01:47,400
从一个地方到另一个地方流动，就像
汽车从甲地到乙地一样。 

21
00:01:47,400 --> 00:01:51,420
根据交通拥堵或道路状况，您可能
会在每次旅行时选择一种路线或是

22
00:01:51,420 --> 00:01:56,140
被迫采取另一种路线到达目的地。 

23
00:01:58,440 --> 00:02:03,980
而且，正如你可以用车运送各种东西，
多种数字信息可以

24
00:02:03,980 --> 00:02:08,280
用IP数据包发送，但也有一些限制。 

25
00:02:08,280 --> 00:02:13,500
例如，如果你要运送一架航天飞机，
从建造地送到发射地，那该怎么办。 

26
00:02:13,500 --> 00:02:18,780
一辆卡车装不下一台航天飞机，
所以它需要被拆解，用卡车

27
00:02:18,780 --> 00:02:23,680
运送。卡车可以走不同的路线并且
可能在不同的时间到达目的地。 

28
00:02:23,680 --> 00:02:30,360
當所有的组件到了，就可以重新组装
構成完整的飞机，并且随时准备发射。 

29
00:02:31,360 --> 00:02:34,320
在互联网上，数据包发送运作细节也像这样。 

30
00:02:34,320 --> 00:02:39,860
如果您有一个非常大的图像，
想要发送给朋友或上传到网站上， 

31
00:02:39,860 --> 00:02:45,660
该图像可能是由数百万个1和0的位组成，
这对于一个数据包来发送的量来说太大了。 

32
00:02:45,660 --> 00:02:49,810
由于它是计算机上的数据，
发送图像的计算机可以很快

33
00:02:49,810 --> 00:02:53,300
将其分解成数百个甚至数千个
更小的称为数据包的组件。 

34
00:02:54,940 --> 00:03:00,220
不同于汽车或卡车，这些数据包没有司机，
他们不选择他们的路线。每个数据包

35
00:03:00,220 --> 00:03:06,340都
有它来自哪里和它正在去哪里的互联网地址。
因特网上的专用计算机称为路由器，

36
00:03:06,340 --> 00:03:10,900
就像流量管理器一样，使数据包顺利地通过网络。 

37
00:03:10,900 --> 00:03:16,480
如果一条线路拥挤，个別的数据包可以
通过不同的路线在互联网传播，

38
00:03:16,480 --> 00:03:21,840
数据包們可能在稍微不同的时间，
甚至不按顺序到达目的地。 

39
00:03:22,820 --> 00:03:26,560
让我们来谈谈这是如何运作的。
作为互联网协议（internet protocol）
的一部分， 

40
00:03:26,569 --> 00:03:31,169
每个路由器跟踪记录数据包的
多条发送路径，并根据数据包的

41
00:03:31,169 --> 00:03:36,120
目的IP地址为每一块数据选择
最便宜的可用路径。 

42
00:03:36,660 --> 00:03:43,880
在这种情况下最便宜的并不意味着成本，
而是时间和非技术因素，
如政治或企間之间的关系。 

43
00:03:43,880 --> 00:03:48,520
通常，最好的数据流动路线
并不一定是最直接的。 

44
00:03:48,520 --> 00:03:53,150
有路径多选项，使网络得以
容错（fault tolerant）。这意味着

45
00:03:53,150 --> 00:03:57,580
即使网络出现了可怕的错误，
也能继续发送数据包。 

46
00:03:57,580 --> 00:04:01,480
这是互联网的一个关键原则的基础：
可靠性（reliability）。 

47
00:04:03,640 --> 00:04:09,340
假设，请求数据时，不是所有数据包
都送达该怎么办？ 比如你要听一首歌 

48
00:04:09,349 --> 00:04:14,829
你怎么能百分百确保所有的数据都
将送达，以使歌曲完美播放？ 

49
00:04:14,829 --> 00:04:19,240
来见见你最好的朋友，
TCP（传输控制协议）。 

50
00:04:19,959 --> 00:04:26,520
TCP以数据包的方式管理数据的发送和
接收。想象他是一个有保证的邮递服务。 

51
00:04:26,520 --> 00:04:31,660
当您在设备上点一首歌，Spotify
会把发送的歌曲分成许多数据包。 

52
00:04:32,660 --> 00:04:38,660
当你的数据包到达时，TCP确认接收（ack），
并返回每个数据包的收到的确认信息。 

53
00:04:38,660 --> 00:04:43,320
如果所有的数据包都存在，
TCP标志着你已完成了你的发送。 

54
00:04:50,180 --> 00:04:54,820
如果TCP发现一些数据包丢失，
他不会标记送达，否则您的

55
00:04:54,820 --> 00:04:59,930
歌不会发出一样好的声音，或者可能
会丢失部分信息。对于每一个丢失或

56
00:04:59,930 --> 00:05:05,930
不完整的数据包，Spotify的将重新
发送。一旦TCP验证了一首歌请求的

57
00:05:05,930 --> 00:05:09,420
多个包的发送无误，
你点的歌曲将开始播放。 

58
00:05:11,860 --> 00:05:18,220
TCP和路由器系统的优点是
它们是可扩展（scalable）的。
他们可以使用8或80亿个设备。 

59
00:05:18,300 --> 00:05:23,440
事实上，由于这些容错和冗余原则，
我们添加的路由器越多，

60
00:05:23,449 --> 00:05:28,069
互联网就变得越可靠。更重要的是，
我们可以在不中断服务的情况下

61
00:05:28,069 --> 00:05:31,500
增加和扩展互联网，让每个人都能使用它。 

62
00:05:31,500 --> 00:05:34,100
互联网是由成百上千的网络

63
00:05:34,100 --> 00:05:39,280
和数十亿台连接在一起的计算机
和设备组成。这些不同

64
00:05:39,280 --> 00:05:44,360
系统组成网络相互连接，
相互沟通， 

65
00:05:44,360 --> 00:05:50,380
携手合作，这靠的是说好的数据发送标准，
数据发送得以有所依。 

66
00:05:51,000 --> 00:05:56,000
数据发送路上的计算设备或路由器
帮助所有的数据包能井然有序地到达

67
00:05:56,000 --> 00:06:00,220
目的地并重新组合， 

68
00:06:01,200 --> 00:06:08,880
这种情况一天发生数十亿次，不管你是
和其他人发送电子邮件，访问网页，进行

69
00:06:08,880 --> 00:06:12,000
视频聊天，使用手机应用程序，还是

70
00:06:12,000 --> 00:06:17,000
在互联网上的传感器或设备相互交谈时
（都是路上设备或路由器携手合作的成果）。 

71
00:06:17,000 --> 00:06:22,000
（code.org）
（使用CC-BY-NC-ND 授权使用）
 
